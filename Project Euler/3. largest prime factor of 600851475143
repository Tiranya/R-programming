#this is a program to obtain the largest prime factor of 600851475143
#the number is too big though, therefore, I will be starting off with 30
#the answer should be 2,3,5
#the task is too big
#therefore, i will try to get the first 5 prime numbers as a sequence

#step 1 - program to get the first 5 prime numbers as a sequence
#attempt 2
n=1
x=1
y=c()
for (n in 1:5)
{while (x in 1:n){
if (n%%x==0)
{y=c(y,n)}}}
print (y)

attempt fail

#attempt 3
n=1
x=1
y=c()
for (n in 1:5)
{for (x in 1:n){
if (n%%x==0)
{y=c(y,n)}}}
print (y)

result -  1 2 2 3 3 4 4 4 5 5

#error 1 - this is to eliminate the repetition of the numbers in the sequence
#attempt 4
n=1
x=1
y=c()
z=1
for (n in 1:5)
{for (x in 1:n){
if (n%%x==0)
{z=n}
y=c(y,z)}}
print (y)

#failed attempt

#attempt 5
#The error in this is that
#n is inserted into the y variable after every division. 
#instead, if it came out only once, then the error will be corrected.

n=1
x=2
y=c()
z=0
for (n in 1:5)
{for (x in 1:n){
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)}}
print (y)

#output - 1 2 3 4 5

#the prime numbers is a bit difficult, 
#first I need to make sure I can break the count at 5
#error 2 - count = 5
#attempt 6

n=1
x=2
y=c()
z=0
count=0
for (n in 1:10)
{for (x in 1:n){
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)
count=count+1}
if(count==5)
{break}}
print (y)

output - 1 2 3 4 5

#attempt 6 - test 2

output - 1 2 3 4 5 6
attempt successful

#error - filtering out the prime numbers
#I have identified the error, 
#error is in including the 1 in the range of x
#when 1 is included in the all the numbers will be there 
#because everything is divisible with 1
#Another is that, going until n is not needed,
#because, eg:(1x4)(2x2) (4x1) everything is in pairs, 
#so going until the sqrt of n is enough
#corrected code 1
n=1
x=2
y=c()
z=0
count=0
for (n in 1:10)
{for (x in 2:sqrt(n)){
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)
count=count+1}
if(count==5)
{break}}
print (y)
#output - [1] 1 2 4 6 8
#
#I got the opposite result
#corrected code 2
n=1
x=2
y=c()
z=0
a=c()
count=0
for (n in 1:10)
{for (x in 2:sqrt(n)){
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)}
else{a=c(a,z)
count=count+1}
if(count==10)
{break}}
print (a)
#
#The error is in z, coz z is not put to 0, after each loop
#corrected code 3
n=1
x=2
y=c()
z=0
a=c()
count=0
for (n in 1:10)
{for (x in 2:sqrt(n)){
z=0
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)}
else{a=c(a,z)
count=count+1}
if(count==10)
{break}}
print (a)
#
#corrected code 4
n=1
x=2
y=c()
z=0
count=0
for (n in 1:10)
{for (x in 2:sqrt(n)){
z=0
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)}
if(count==10)
{break}}
print (y)
#output - [1] 1 2 4 6 8 9
#error - in the position of the z
#this causes the z to always go back to 0, b4 it goes out of the loop
#
#corrected code 5
n=1
x=2
y=c()
z=0
count=0
for (n in 1:10)
{z=0
for (x in 2:sqrt(n)){
if (n%%x==0)
{z <- n}}
if (z==n)
{y=c(y,z)}
if(count==10)
{break}}
print (y)
#output - [1]  1  2  4  6  8  9 10